version: '3.5'

services:
  ddclient:
    container_name: ddclient
    image: linuxserver/ddclient
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/ddclient:/config

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    command: --schedule "0 0 4 * * *" --cleanup
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock

  muximux:
    container_name: muximux
    image: linuxserver/muximux
    restart: unless-stopped
    ports:
      - "8888:80"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/muximux:/config
    networks:
        - traefik
    labels:
      traefik.enable: true
      traefik.http.middlewares.muximux-auth.basicauth.usersfile: /etc/traefik/.htpasswd.priv
      traefik.http.routers.muximux-secure.entrypoints: https
      traefik.http.routers.muximux-secure.rule: Host(`muximux.${SERVER_DOMAIN}`)
      traefik.http.routers.muximux-secure.middlewares: muximux-auth
      traefik.http.routers.muximux-secure.tls: true
      traefik.http.routers.muximux-secure.service: muximux
      traefik.http.services.muximux.loadbalancer.server.port: 80
      traefik.docker.network: traefik
      
  netdata:
    container_name: netdata
    image: netdata/netdata
    restart: unless-stopped
    hostname: GLaDOS
    ports:
      - "19999:19999"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.middlewares.netdata-auth.basicauth.usersfile: /etc/traefik/.htpasswd.priv
      traefik.http.routers.netdata-secure.entrypoints: https
      traefik.http.routers.netdata-secure.rule: Host(`netdata.${SERVER_DOMAIN}`)
      traefik.http.routers.netdata-secure.middlewares: netdata-auth
      traefik.http.routers.netdata-secure.tls: true
      traefik.http.routers.netdata-secure.service: netdata
      traefik.http.services.netdata.loadbalancer.server.port: 19999
      traefik.docker.network: traefik
      
  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command: -H unix://${DOCKER_SOCKET}
    ports:
      - "9000:9000"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ${CONFIG_PATH}/portainer:/data
    networks:
        - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.portainer-secure.entrypoints: https
      traefik.http.routers.portainer-secure.rule: Host(`portainer.${SERVER_DOMAIN}`)
      traefik.http.routers.portainer-secure.tls: true
      traefik.http.routers.portainer-secure.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.docker.network: traefik

  traefik:
    container_name: traefik
    image: traefik:v2.0
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      CF_API_EMAIL: ${CLOUDFLARE_EMAIL}
      CF_API_KEY: ${CLOUDFLARE_API_KEY}
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro
      - ${LOCALTIME_PATH}:/etc/localtime:ro
      - ${CONFIG_PATH}/traefik:/etc/traefik
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.middlewares.traefik-auth.basicauth.usersfile: /etc/traefik/.htpasswd.priv
      traefik.http.routers.traefik-secure.entrypoints: https
      traefik.http.routers.traefik-secure.rule: Host(`traefik.${SERVER_DOMAIN}`)
      traefik.http.routers.traefik-secure.middlewares: traefik-auth
      traefik.http.routers.traefik-secure.tls: true
      traefik.http.routers.traefik-secure.tls.certresolver: cloudflare
      traefik.http.routers.traefik-secure.tls.domains[0].main: ${SERVER_DOMAIN}
      traefik.http.routers.traefik-secure.tls.domains[0].sans: "*.${SERVER_DOMAIN}"
      traefik.http.routers.traefik-secure.service: api@internal

  pihole:
    container_name: pihole
    image: pihole/pihole
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8088:80"
    environment:
      TZ: ${TIMEZONE}
      ServerIP: ${HOST_IP}
      VIRTUAL_HOST: ${HOST_IP}:8088
    volumes:
      - ${CONFIG_PATH}/dnsmasq.d:/etc/dnsmasq.d
      - ${CONFIG_PATH}/pihole:/etc/pihole
    cap_add:
      - NET_ADMIN

networks:
  traefik:
    driver: bridge
