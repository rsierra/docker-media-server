version: '3.5'

services:
  amule:
    container_name: amule
    image: tchabaud/amule
    restart: unless-stopped
    ports:
      - "4711:4711"
      - "4712:4712"
      - "4662:4662"
      - "4665:4665/udp"
      - "4672:4672/udp"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/amule/config:/home/amule/.aMule
      - ${CONFIG_PATH}/amule/webserver:/usr/share/amule/webserver
      - ${DOWNLOADS_PATH}/amule/complete:/incoming
      - ${DOWNLOADS_PATH}/amule/incomplete:/temp

  transmission:
    container_name: transmission
    image: linuxserver/transmission
    restart: unless-stopped
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/transmission:/config
      - ${DOWNLOADS_PATH}/transmission/watch:/watch
      - ${DOWNLOADS_PATH}/transmission:/downloads
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.transmission-secure.entrypoints: https
      traefik.http.routers.transmission-secure.rule: Host(`transmission.${SERVER_DOMAIN}`)
      traefik.http.routers.transmission-secure.tls: true
      traefik.http.routers.transmission-secure.service: transmission
      traefik.http.services.transmission.loadbalancer.server.port: 9091
      traefik.docker.network: traefik

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    restart: unless-stopped
    depends_on:
      - transmission
      - jackett
    ports:
      - "8989:8989"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${LOCALTIME_PATH}:/etc/localtime:ro
      - ${CONFIG_PATH}/sonarr:/config
      - ${LOCAL_MEDIA_PATH}:/tv
      - ${DOWNLOADS_PATH}/transmission:/downloads
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.middlewares.sonarr-auth.basicauth.usersfile: /etc/traefik/.htpasswd.priv
      traefik.http.routers.sonarr-secure.entrypoints: https
      traefik.http.routers.sonarr-secure.rule: Host(`sonarr.${SERVER_DOMAIN}`)
      traefik.http.routers.sonarr-secure.middlewares: sonarr-auth
      traefik.http.routers.sonarr-secure.tls: true
      traefik.http.routers.sonarr-secure.service: sonarr
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.docker.network: traefik
   
  radarr:
    container_name: radarr
    image: linuxserver/radarr:preview
    restart: unless-stopped
    depends_on:
      - transmission
      - jackett
    ports:
      - "7878:7878"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${LOCALTIME_PATH}:/etc/localtime:ro
      - ${CONFIG_PATH}/radarr:/config
      - ${LOCAL_MEDIA_PATH}:/movies
      - ${DOWNLOADS_PATH}/transmission:/downloads
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.middlewares.radarr-auth.basicauth.usersfile: /etc/traefik/.htpasswd.priv
      traefik.http.routers.radarr-secure.entrypoints: https
      traefik.http.routers.radarr-secure.rule: Host(`radarr.${SERVER_DOMAIN}`)
      traefik.http.routers.radarr-secure.middlewares: radarr-auth
      traefik.http.routers.radarr-secure.tls: true
      traefik.http.routers.radarr-secure.service: radarr
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.docker.network: traefik

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    restart: unless-stopped
    ports:
      - "9117:9117"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${LOCALTIME_PATH}:/etc/localtime:ro
      - ${CONFIG_PATH}/jackett:/config
      - ${DOWNLOADS_PATH}:/downloads
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.jackett-secure.entrypoints: https
      traefik.http.routers.jackett-secure.rule: Host(`jackett.${SERVER_DOMAIN}`)
      traefik.http.routers.jackett-secure.tls: true
      traefik.http.routers.jackett-secure.service: jackett
      traefik.http.services.jackett.loadbalancer.server.port: 9117
      traefik.docker.network: traefik
   
  deezloaderrmx:
    container_name: deezloaderrmx
    image: bocki/deezloaderrmx    
    restart: unless-stopped
    ports:
      - "1730:1730"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${CONFIG_PATH}/deezloaderrmx:/config
      - ${DOWNLOADS_PATH}/deezloaderrmx:/downloads
    networks:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.middlewares.deezloaderrmx-auth.basicauth.usersfile: /etc/traefik/.htpasswd.priv
      traefik.http.routers.deezloaderrmx-secure.entrypoints: https
      traefik.http.routers.deezloaderrmx-secure.rule: Host(`deezloaderrmx.${SERVER_DOMAIN}`)
      traefik.http.routers.deezloaderrmx-secure.middlewares: deezloaderrmx-auth
      traefik.http.routers.deezloaderrmx-secure.tls: true
      traefik.http.routers.deezloaderrmx-secure.service: deezloaderrmx
      traefik.http.services.deezloaderrmx.loadbalancer.server.port: 1730
      traefik.docker.network: traefik
